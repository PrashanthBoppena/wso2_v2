<?xml version="1.0" encoding="UTF-8"?>
<api context="/Clone_Aggregate" name="Clone_Aggregate_API" xmlns="http://ws.apache.org/ns/synapse">
    <resource faultSequence="faultSequence" methods="POST GET">
        <inSequence>
            <sequence key="gov:custom/sequences/CommonAPIPropertiesCollectionSeq.xml"/>
            <sequence key="gov:custom/sequences/parentIdGenerateSeq.xml"/>
            <class description="SystemRequestLogs" name="com.knot.uol.utils.SystemRequestNewLog">
                <property name="process" value="eligibilityConfigCheck"/>
                <property expression="get-property('file','apiRegistryConfigs')" name="apiregistryConfigPath"/>
                <property expression="$ctx:requestPayload" name="requestPayload"/>
                <property expression="$ctx:SYNAPSE_REST_API" name="apiName"/>
                <property expression="$ctx:parentId" name="parentId"/>
                <property name="childId" value="Main"/>
            </class>
            <property expression="$ctx:parentId" name="parentId" scope="transport" type="STRING"/>
            <call>
                <endpoint>
                    <http method="post" uri-template="http://172.16.110.118:8285/DynamicQueryCall">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <enrich>
                <source clone="true" type="body"/>
                <target property="DynamicQueryResponse" type="property"/>
            </enrich>
            <payloadFactory media-type="json">
                <format>$1</format>
                <args>
                    <arg evaluator="json" expression="$.response[0]"/>
                </args>
            </payloadFactory>
            <log level="custom">
                <property expression="//sub_api_id" name="sub_api_id"/>
            </log>
            <script language="js"><![CDATA[// Get the JSON object from the message context
		var log = mc.getServiceLog();
        var jsonPayload = mc.getPayloadJSON();
	
        var count = 0;

        for (var key in jsonPayload) {
			
            if (jsonPayload[key] ==="1") {
				
                count++;
            }
        }

        // Set the count in a property for future use
        mc.setProperty("CountWithY", count);]]></script>
            <log level="custom">
                <property expression="$ctx:CountWithY" name="CountWithY"/>
            </log>
            <filter regex="0.0" source="get-property('CountWithY')">
                <then>
                    <log level="custom">
                        <property name="get-property('CountWithY')===>" value="0"/>
                    </log>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
"DynamicQueryResponse":$1,&#xd;
"CustomMsg":"There is no eligibility check for this scenario"&#xd;
}</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:DynamicQueryResponse"/>
                        </args>
                    </payloadFactory>
                    <property expression="json-eval($)" name="responsePayload" scope="default" type="STRING"/>
                    <sequence key="SystemResLogsSeq"/>
                    <respond/>
                </then>
                <else>
                    <log level="custom">
                        <property name="get-property('CountWithY')==>" value="Not 0"/>
                    </log>
                    <property description="endpointsFromReg" expression="get-property('registry', 'conf:/repository/esb/sample-endpoints.xml')" name="endpointsFromReg" scope="default" type="OM"/>
                    <clone id="cloneMediator_1" sequential="true">
                        <target>
                            <sequence>
                                <filter regex="Y" source="//advance">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="Advance_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.Advance_API)].Advance_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='Advance_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                        <target>
                            <sequence>
                                <filter regex="Y" source="//barring">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="Barring_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.Barring_API)].Barring_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='Barring_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                        <target>
                            <sequence>
                                <filter regex="Y" source="//deposit">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="Deposit_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.Deposite_API)].Deposite_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='Deposite_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                        <target>
                            <sequence>
                                <filter regex="Y" source="//kyc_check">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="KYC_Calling_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.KYC_Calling_API)].KYC_Calling_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='KYC_Calling_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                        <target>
                            <sequence>
                                <filter regex="Y" source="//mah_status">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="MAH_Status_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.MAH_Status_API)].MAH_Status_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='MAH_Status_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                        <target>
                            <sequence>
                                <filter regex="Y" source="//msisdn_validation">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="MSISDN_Validation_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.MSISDN_Validation_API)].MSISDN_Validation_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='MSISDN_Validation_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                        <target>
                            <sequence>
                                <filter regex="Y" source="//pending_reports">
                                    <then>
                                        <propertyGroup>
                                            <property name="process" scope="default" type="STRING" value="Pending_Request_API"/>
                                            <property expression="json-eval($ctx:requestPayload.requestPayload[?(@.Pending_Request_API)].Pending_Request_API.request)" name="requestPayload" scope="default" type="STRING"/>
                                            <property expression="$ctx:endpointsFromReg/*[local-name()='Pending_Request_API']" name="uri.var.uri" scope="default" type="STRING"/>
                                        </propertyGroup>
                                        <payloadFactory description="build payload" media-type="json">
                                            <format>$1</format>
                                            <args>
                                                <arg evaluator="xml" expression="$ctx:requestPayload"/>
                                            </args>
                                        </payloadFactory>
                                        <sequence key="GenericRestAPICallSeq"/>
                                    </then>
                                    <else/>
                                </filter>
                            </sequence>
                        </target>
                    </clone>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
"$1":$2&#xd;
}</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:process"/>
                            <arg evaluator="json" expression="$"/>
                        </args>
                    </payloadFactory>
                    <aggregate id="cloneMediator_1">
                        <completeCondition>
                            <messageCount max="{get-property('CountWithY')}" min="{get-property('CountWithY')}"/>
                        </completeCondition>
                        <onComplete aggregateElementType="root" expression="json-eval($)">
                            <script language="js"><![CDATA[var log = mc.getServiceLog();
                            var responses = mc.getPayloadJSON();
                            var eligibilitystatus = true;
                            for(var i=0; i<responses.length; i++){
                            	 for(var key in responses[i]){
                            		var validateStatus=responses[i][key].validateStatus;
                            		/*  log.info("process==> "+key);
                            		log.info("dot notation==> "+validateStatus); */
                            		if (validateStatus === false){
                            			
                            			eligibilitystatus = false;
                            			break;
                            		}
                            	} 
                    			if (eligibilitystatus === false) {
            						break;
        						}                	
                            	
                            	
                            }   
                            /*log.info("eligibilitystatus==> "+eligibilitystatus);
                            responses.push({ "eligibilitystatus": eligibilitystatus });
                            mc.setPayloadJSON(responses); */
                            
                            mc.setProperty("eligibilitystatus",eligibilitystatus);]]></script>
                            <payloadFactory media-type="json">
                                <format>{&#xd;
"eligibilitystatus":$2,&#xd;
"response":$1&#xd;
}</format>
                                <args>
                                    <arg evaluator="json" expression="$"/>
                                    <arg evaluator="xml" expression="$ctx:eligibilitystatus"/>
                                </args>
                            </payloadFactory>
                            <property expression="json-eval($)" name="responsePayload" scope="default" type="STRING"/>
                            <class description="SystemResponseLogs" name="com.knot.uol.utils.SystemResponseUpdateLog">
                                <property expression="$ctx:parentId" name="parentId"/>
                                <property expression="json-eval($)" name="responsePayload"/>
                                <property name="status" value="Completed"/>
                                <property expression="get-property('file','apiRegistryConfigs')" name="apiregistryConfigPath"/>
                                <property name="childId" value="Main"/>
                            </class>
                            <property action="remove" description="remove parentId from $trp" name="parentId" scope="transport"/>
                            <log level="custom">
                                <property expression="$ctx:endpointsFromReg/*[local-name()='Advance_API']" name="endpointsFromReg"/>
                            </log>
                            <respond/>
                        </onComplete>
                    </aggregate>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
    </resource>
</api>
